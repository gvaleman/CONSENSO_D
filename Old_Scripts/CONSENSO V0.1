#!/bin/bash

# Obtener el serotipo a ensamblar y la ruta de la secuencia de referencia
serotype=$1

# Obtener la ruta del directorio actual
current_dir=$PWD

# Definir la secuencia de referencia según el serotipo especificado
if [ "$serotype" == "DENV_1" ]; then
    fasta_file="$current_dir/CONSENSO_D/Ref_DENV/Reference_DV_1.fasta"
elif [ "$serotype" == "DENV_2" ]; then
    fasta_file="$current_dir/CONSENSO_D/Ref_DENV/Reference_DV_2.fasta"
elif [ "$serotype" == "DENV_3" ]; then
    fasta_file="$current_dir/CONSENSO_D/Ref_DENV/Reference_DV_3.fasta"
elif [ "$serotype" == "DENV_4" ]; then
    fasta_file="$current_dir/CONSENSO_D/Ref_DENV/Reference_DV_4.fasta"
elif [ "$serotype" == "RABV" ]; then
    fasta_file="$current_dir/CONSENSO_D/Ref_DENV/RABV_Reference.fasta"
else
    echo "Error: serotipo / Virus no válido"
    echo "
    Intentar con las opciones
              DENV_1
              DENV_2
              DENV_3
              DENV_4
              RABV "
    exit 1
fi

echo "--*--*--*--*--*--*--*--*--*--*--*--*--*---"
sleep 0.3
echo "--                                      --"
sleep 0.3
echo "--                                      --"
sleep 0.3
echo "--             ENSAMBLANDO              --"
sleep 0.3
echo "--                                      --"
sleep 0.3
echo "--               $serotype                 --"
sleep 0.3
echo "--                                      --"
sleep 0.3
echo "--                                      --"
sleep 0.3
echo "--*--*--*--*--*--*--*--*--*--*--*--*--*---"
sleep 1
echo "--  Instituto De ciencias Sostenibles   --"
sleep 0.1
echo "------------------------------------------"

# Obtener la ruta del archivo fasta relativa al directorio actual
#asta_file="$current_dir/CONSENSO_D/Ref_DENV/Reference_DV_2.fasta"

dir=$2
touch -c "$dir"/*
cd "$dir"

for file in $(ls -d */)
do
	cd $file
		#Mensajes a quien va a instalar
	printf '%s\n' "Descomprimiendo..."
	nombre=${PWD##*/}
	cat $(ls *.gz) > "${nombre}.fastq.gz"
	tar="${nombre}.fastq.gz"
	gzip -d $tar
	printf '%s\n' "Descompresión realizada con éxito"
	printf '%s\n' "Iniciando Proceso de ensamblaje"
	printf '%s\n' "...."
	printf '%s\n' "........"
	printf '%s\n' ".............."
	printf '%s\n' "........................"
	printf '%s\n' "El proceso ha iniciado"
		#Definiendo el nombre de la carpeta como mi variable nombre
	muestra=$(ls *.fastq) 
		#Programas
	printf '%s\n' "Mapeando contra referencia..."
	minimap2 -a $fasta_file $muestra > Output.aln.sam
	samtools view -S -b Output.aln.sam > Output.aln.bam
	samtools sort Output.aln.bam -o Output.sorted.bam
	samtools index Output.sorted.bam
        samtools depth Output.sorted.bam > "$(basename "$(dirname "$(realpath Output.sorted.bam)")").coverage"
	printf '%s\n' "::::::::::CREANDO SECUENCIA CONSENSO::::::::::::"
	#samtools mpileup -uf $fasta_file Output.sorted.bam | bcftools call -c | vcfutils.pl vcf2fq > SAMPLE_cns.fastq
	bcftools mpileup -Ou -f $fasta_file Output.sorted.bam | bcftools call -mv -Oz -o calls.vcf.gz
	bcftools norm -f $fasta_file calls.vcf.gz -Oz -o normalized.vcf.gz
	bcftools view normalized.vcf.gz | vcfutils.pl vcf2fq > SAMPLE_cns.fastq

	seqtk seq -aQ64 -q20 -n N SAMPLE_cns.fastq > SAMPLE_cns.fasta
	echo ">${nombre}" > "${nombre}.fasta"
	nombre2="${nombre}.fasta"
	tail -n +2 SAMPLE_cns.fasta >> $nombre2
	rm SAMPLE_cns.fasta
	printf '%s\n' "::::::::::PROCESO TERMINADO::::::::::::"
	cd ..
	rm $(ls *.gz)  #No remueve los .gz. el comando debe estar dentro de la carpeta
done
cat $(find -name *.fasta) > "all_consensus_$serotype.fasta"
echo "	 ____  ____   ___     __    ___  _____  ___                         
	|    \|    \ /   \   /  ]  /  _]/ ___/ /   \                        
	|  o  )  D  )     | /  /  /  [_(   \_ |     |                       
	|   _/|    /|  O  |/  /  |    _]\__  ||  O  |                       
	|  |  |    \|     /   \_ |   [_ /  \ ||     |                       
	|  |  |  .  \     \     ||     |\    ||     |                       
	|__|  |__|\_|\___/ \____||_____| \___| \___/                        
                                                                    
 _____  ____  ____    ____  _      ____  _____   ____  ___     ___  
|     ||    ||    \  /    || |    |    ||     | /    ||   \   /   \ 
|   __| |  | |  _  ||  o  || |     |  | |__/  ||  o  ||    \ |     |
|  |_   |  | |  |  ||     || |___  |  | |   __||     ||  D  ||  O  |
|   _]  |  | |  |  ||  _  ||     | |  | |  /  ||  _  ||     ||     |
|  |    |  | |  |  ||  |  ||     | |  | |     ||  |  ||     ||     |
|__|   |____||__|__||__|__||_____||____||_____||__|__||_____| \___/ 
                                                                   
"
echo "Se ha generado un archivo multi-fasta llamado: "
echo " -->    *all_consensus_$serotype.fasta*"
echo " en la ubicación: $dir "
